input {
    http {
        port => "9600"
    }
    beats {
        port => "5044"
        ssl => true
        ssl_verify_mode => "force_peer"
        ssl_certificate_authorities => ["/etc/securebeat/ca/ca.crt"]
        ssl_certificate => "/etc/securebeat/server/tls.crt"
        ssl_key => "/etc/securebeat/server/tls.key"
    }
}
filter {
    if [message] == "" {
        drop { }
    }
    mutate {
        remove_field => ["headers","timestamp","host","log","@version","prospector","beat","input","source","offset","tags","stream","kubernetes"]
    }
    if [message] =~ /.*enforcer output.*/ {
        mutate {
            gsub => ["message","enforcer output",""]
        }
        base64 {
            field => "message"
        }
        json {
            source => "message"
            target => "messagejson"
        }
        ruby {
            code => "
                event.get('messagejson').each {|k, v|
                    event.set(k, v)
                }
                event.remove('messagejson')
            "
        }
        date {
            match => [ "timestamp" ,"ISO8601" ]
        }
        mutate {
            remove_field => ["messagejson","message","timestamp"]
        }
        mutate {
            add_field => { "i" => "1" }
        }
    } if [message] =~ /.*enforcer access.*/ {
        json {
            source => "message"
            target => "messagejson"
        }
        ruby {
            code => "
                event.get('messagejson').each {|k, v|
                    event.set(k, v)
                }
                event.remove('messagejson')
            "
        }
        date {
            match => [ "start_time" ,"ISO8601" ]
        }
        mutate {
            remove_field => ["messagejson","message","start_time"]
        }
        mutate {
            add_field => { "i" => "2" }
        }
    }
}
output {
    if [i] == "1" {
        elasticsearch {
            hosts => ["https://elasticsearch-service-exposed:443"]
            index => "print-%{+YYYY.MM.dd}"
            user => "nginx"
            password => "${ES_PASSWORD}"
            ssl => true
            ssl_certificate_verification => false
        }
    }
    else if [i] == "2" {
        elasticsearch {
            hosts => ["https://elasticsearch-service-exposed:443"]
            index => "access-%{+YYYY.MM.dd}"
            user => "nginx"
            password => "${ES_PASSWORD}"
            ssl => true
            ssl_certificate_verification => false
        }
    }
}